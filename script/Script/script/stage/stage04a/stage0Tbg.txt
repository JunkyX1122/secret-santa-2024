#include "./../../lib/lib_stageall.txt"
let GCSD=GetCurrentScriptDirectory();
let bSpell = false;
let current = GetCurrentScriptDirectory();
let fo = 0;
let adder = 0;

@Initialize
{
	TCallBg;
	ResetBG;
	SetAutoDeleteObject(true);
}

@MainLoop
{
	globalscroll+=acceleration;
	pathscroll+=acceleration;
	yield;
}
let counter = 0;
task TCallBg
{
	StartNamelessPath;
	SpellBG;
	SkyBG;
}


task SkyBG
{

	let obj3 = ObjPrim_Create(OBJ_SPRITE_2D); //2Dスプライトオブジェクト生成
	Obj_SetRenderPriorityI(obj3, 20); //描画優先度を設定
	ObjPrim_SetTexture(obj3, IMG_PIXEL); //テクスチャを設定
	ObjSprite2D_SetSourceRect(obj3, 0, 0,1024, 512);
	ObjSprite2D_SetDestRect(obj3, 0, 0, 1024, 512);
	ObjSprite2D_SetDestCenter(obj3);
	ObjRender_SetAlpha(obj3,96);
	ObjRender_SetPosition(obj3,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
	ObjRender_SetColor(obj3,0,0,64);
	
	//ObjRender_SetBlendType(obj3,BLEND_SUBTRACT);
	let cc = 0;
	while(true)
	{
		ObjRender_SetPosition(obj3,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
		//ObjSprite2D_SetSourceRect(obj2, cc, 0,1024+cc, 512);
		cc+=0.5;
		yield;
	}
}


task ResetBG
{
	SetCameraFocusXYZ(0, -60, 80);
	SetCameraElevationAngle(0);
	SetCameraPitch(0);
	SetCameraYaw(0);
	SetCameraRoll(0);
	SetCameraRadius(0);
	SetCameraElevationAngle(0);
	
	SetViewFrom(10, -90, 30+15*cos(camanglemodifier));

	SetCameraPerspectiveClip(0,7000);
	SetFogParam(350, 750, 57, 67, 81); 
}
function SetViewFrom(radius, azimuth, elevation){

	SetCameraRadius(radius);
	SetCameraAzimuthAngle(azimuth);
	SetCameraElevationAngle(elevation);
	
}
let tiltangle = 30;
let time = 0;
let objtreesright = [];
let objtreesleft = [];

let globalscroll = 0.5;
let pathscroll = 0;
let camanglemodifier = 180; //set to 0 for effect
let treeoffset = -1110;
let acceleration = 1; //usually starts at 0.5
let accelChangeRate = 0.025/2; //change this to make acceleration slower
let bgtime = 0;

let field = IMG_STAGE_04_FIELD;
let fogback = IMG_STAGE_04_FOGBACK;
let trail = IMG_STAGE_04_TRAIL;
let trees = IMG_STAGE_04_TREE;
task StartNamelessPath{
	
	SetCommonData("BGTransition", true);
	SetCommonData("BGSpeed", 2.000000);
	let obj = ObjPrim_Create(OBJ_SPRITE_3D);
	ObjRender_SetBlendType(obj, BLEND_ALPHA);
	Obj_SetRenderPriorityI(obj,17);
	ObjPrim_SetTexture(obj,field);
	ObjSprite3D_SetSourceDestRect(obj, 0, 0+pathscroll, 500, 1500+pathscroll);
	ObjRender_SetAngleXYZ(obj, 90, 0, 0);
	ObjRender_SetScaleXYZ(obj, 1, 1, 1);
	ObjRender_SetPosition(obj, 0, -300, 600);

	let obj2 = ObjPrim_Create(OBJ_SPRITE_3D);
	ObjRender_SetBlendType(obj2, BLEND_ALPHA);
	Obj_SetRenderPriorityI(obj2,18);
	ObjPrim_SetTexture(obj2,trail);
	ObjSprite3D_SetSourceDestRect(obj2, 0, 0+pathscroll, 512, 1500+pathscroll);
	ObjRender_SetAngleXYZ(obj2, 90, 0, 0);
	ObjRender_SetScaleXYZ(obj2, 0.5, 1, 1);
	ObjRender_SetPosition(obj2, 0, -300, 600);
	
	let obj5 = ObjPrim_Create(OBJ_SPRITE_3D);
	ObjRender_SetBlendType(obj5, BLEND_ALPHA);
	Obj_SetRenderPriorityI(obj5,16);
	ObjPrim_SetTexture(obj5,fogback);
	ObjSprite3D_SetSourceDestRect(obj5, 1, 1, 256, 256);
	ObjRender_SetAngleXYZ(obj5, 0, 180, 180);
	ObjRender_SetScaleXYZ(obj5, 10, 10, 1);
	ObjRender_SetPosition(obj5, 0, 0, 1900); 
	let totalTrees = 2;
	descent(i in 1..totalTrees+1)
	{
		treeoffset = -1110;
		loop(11)
		{
			let obj3 = ObjPrim_Create(OBJ_SPRITE_3D);
			ObjRender_SetBlendType(obj3, BLEND_ALPHA);
			Obj_SetRenderPriorityI(obj3,19);
			ObjPrim_SetTexture(obj3,trees);
			ObjSprite3D_SetSourceDestRect(obj3, 0, 0, 512, 700);
			ObjRender_SetAngleXYZ(obj3, 0, 0, 180);
			ObjRender_SetScaleXYZ(obj3, 0.5, 0.5, 1);
			ObjRender_SetPosition(obj3, 160*i, -50, 1200-globalscroll+treeoffset);
			
			objtreesright = objtreesright ~ [obj3];
			
			let obj4 = ObjPrim_Create(OBJ_SPRITE_3D);
			ObjRender_SetBlendType(obj4, BLEND_ALPHA);
			Obj_SetRenderPriorityI(obj4,19);
			ObjPrim_SetTexture(obj4,trees);
			ObjSprite3D_SetSourceDestRect(obj4, 0, 0, 512, 700);
			ObjRender_SetAngleXYZ(obj4, 0, 0, 180);
			ObjRender_SetScaleXYZ(obj4, 0.5,0.5, 1);
			ObjRender_SetPosition(obj4, -160*i, -50, 1200-globalscroll+treeoffset);
			
			objtreesleft = objtreesleft ~ [obj4];
			treeoffset-=110;
		}
	}
	treeoffset = 0;
	
	loop
	{
	
		globalscroll%=110;		
		time++;
		ObjRender_SetBlendType(obj, BLEND_ALPHA);
		ObjPrim_SetTexture(obj,field);
		ObjSprite3D_SetSourceDestRect(obj, 0, 0+pathscroll, 1400, 1500+pathscroll);
		ObjRender_SetAngleXYZ(obj, 90, 0, 0);
		ObjRender_SetScaleXYZ(obj, 1, 1, 1);
		ObjRender_SetPosition(obj, 0, -300, 600);

		ObjRender_SetBlendType(obj2, BLEND_ALPHA);
		ObjSprite3D_SetSourceDestRect(obj2, 0, 0+pathscroll, 512, 1500+pathscroll);
		ObjRender_SetAngleXYZ(obj2, 90, 0, 0);
		ObjRender_SetScaleXYZ(obj2, 0.5, 1, 1);
		ObjRender_SetPosition(obj2, 0, -300, 600);
		
		ObjRender_SetPosition(obj5, 0, 0, 1900); 

		ascent(i in 0..length(objtreesright))
		{
			if(i%(length(objtreesright)/totalTrees)==0)
			{
				treeoffset = 0;	
			}
			ObjRender_SetPosition(objtreesright[i], ObjRender_GetX(objtreesright[i]), -150, 1200-globalscroll+treeoffset);
			ObjRender_SetPosition(objtreesleft[i], ObjRender_GetX(objtreesleft[i]), -150, 1200-globalscroll+treeoffset);
			treeoffset-=110;
		}
		treeoffset = 0;	
		wait(1);
	}
}

task SpellBGFlatColor
{
	let obj = ObjPrim_Create(OBJ_SPRITE_2D); //2Dスプライトオブジェクト生成
	Obj_SetRenderPriorityI(obj, 24); //描画優先度を設定
	ObjPrim_SetTexture(obj, GetCurrentScriptDirectory~"./../../../img/background/BG1/pixel.png"); //テクスチャを設定
	ObjSprite2D_SetSourceRect(obj, 0, 0,GetScreenWidth, GetScreenHeight);
	ObjSprite2D_SetDestRect(obj, 0, 0, GetScreenWidth, GetScreenHeight);
	ObjSprite2D_SetDestCenter(obj);
	ObjRender_SetColor(obj,0,0,0);
	let alpha1 = 0;
	while(true)
	{
		if(GetCommonData("SpellCardBG1",false)==true&& GetCommonData("Stage4a_Phase",0) == 0)
		{
			if(alpha1 < 1)
			{ 
				alpha1 += 1/10;
			}
		} 
		else
		{
			if(alpha1>0)
			{
				alpha1 -= 1/40;
			}
		}
		ObjRender_SetAlpha(obj,128*alpha1);
		ObjRender_SetPosition(obj,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
		yield;
	}
	Obj_Delete(obj);
}

task SpellBG
{
	SpellBGFlatColor();
	DaisukeBG();
	SullenBG();
	DuoBG();
}

task DaisukeBG()
{
	let obj = ObjPrim_Create(OBJ_SPRITE_2D); 
	Obj_SetRenderPriorityI(obj, 22); 
	ObjPrim_SetTexture(obj, IMG_STAGE_01B_SPELL_00); 
	ObjSprite2D_SetSourceRect(obj, 0, 0,1024, 512);
	ObjSprite2D_SetDestRect(obj, 0, 0, 1024, 512);
	ObjSprite2D_SetDestCenter(obj);
	ObjRender_SetPosition(obj,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
	ObjRender_SetScaleXYZ(obj, 1);

	let obj2 = ObjPrim_Create(OBJ_SPRITE_2D); 
	Obj_SetRenderPriorityI(obj2, 22); 
	ObjPrim_SetTexture(obj2, IMG_STAGE_01B_SPELL_01); 
	ObjSprite2D_SetSourceRect(obj2, 0, 0,1024, 1024);
	ObjSprite2D_SetDestRect(obj2, 0, 0, 1024, 1024);
	ObjSprite2D_SetDestCenter(obj2);
	ObjRender_SetPosition(obj2,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
	ObjRender_SetScaleXYZ(obj2, 2);
	ObjRender_SetBlendType(obj2, BLEND_ADD_ARGB);
	
	let obj3 = ObjPrim_Create(OBJ_SPRITE_2D); 
	Obj_SetRenderPriorityI(obj3, 23); 
	ObjPrim_SetTexture(obj3, IMG_STAGE_01B_SPELL_02); 
	ObjSprite2D_SetSourceRect(obj3, 0, 0,1024, 1024);
	ObjSprite2D_SetDestRect(obj3, 0, 0, 1024, 1024);
	ObjSprite2D_SetDestCenter(obj3);
	ObjRender_SetPosition(obj3,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
	ObjRender_SetScaleXYZ(obj3, 1);
	ObjRender_SetBlendType(obj3, BLEND_SUBTRACT);
	let alpha1 = 0;
	let c = 0;
	let scrollSpd_bg01 = 0.25;
	let scrlSpd1 = 0.25;
	let scrlSpd2 = -0.5;
	while(true)
	{
		if(GetCommonData("SpellCardBG1",false)==true && (GetCommonData("Stage4a_Phase",0)==0))
		{
			if(alpha1 < 1)
			{ 
				alpha1 += 1/10;
			}
		} 
		else
		{
			if(alpha1>0)
			{
				alpha1 -= 1/40;
			}
		}
		
		ObjRender_SetPosition(obj,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
		ObjRender_SetPosition(obj2,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
		ObjRender_SetPosition(obj3,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
		
		ObjRender_SetAlpha(obj, 255*alpha1);
		ObjRender_SetAlpha(obj2, 32*alpha1);
		ObjRender_SetAlpha(obj3, 128*alpha1);
		
		ObjSprite2D_SetSourceRect(obj2, 0, c*scrlSpd1,1024, 1024+c*scrlSpd1);
		ObjSprite2D_SetSourceRect(obj3, 0, c*scrlSpd2,1024, 1024+c*scrlSpd2);
		c++;
		yield;
	}
}

task SullenBG()
{
	let obj = ObjPrim_Create(OBJ_SPRITE_2D); 
	Obj_SetRenderPriorityI(obj, 22); 
	ObjPrim_SetTexture(obj, IMG_STAGE_04A_SPELL_00); 
	ObjSprite2D_SetSourceRect(obj, 0, 0,1024, 512);
	ObjSprite2D_SetDestRect(obj, 0, 0, 1024, 512);
	ObjSprite2D_SetDestCenter(obj);
	ObjRender_SetPosition(obj,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
	ObjRender_SetScaleXYZ(obj, 1);
	
	let obj2 = ObjPrim_Create(OBJ_SPRITE_2D); 
	Obj_SetRenderPriorityI(obj2, 23); 
	ObjPrim_SetTexture(obj2, IMG_STAGE_04A_SPELL_01); 
	ObjSprite2D_SetSourceRect(obj2, 0, 0,512, 512);
	ObjSprite2D_SetDestRect(obj2, 0, 0, 512, 512);
	ObjSprite2D_SetDestCenter(obj2);
	ObjRender_SetPosition(obj2,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
	ObjRender_SetBlendType(obj2, BLEND_SHADOW );
	ObjRender_SetScaleXYZ(obj2, 1.6);
	//ObjRender_SetColor(obj2, 0, 0, 0);
	

	let obj3 = ObjPrim_Create(OBJ_SPRITE_2D); 
	Obj_SetRenderPriorityI(obj3, 22); 
	ObjPrim_SetTexture(obj3, IMG_STAGE_04A_SPELL_02); 
	ObjSprite2D_SetSourceRect(obj3, 0, 0,1024, 512);
	ObjSprite2D_SetDestRect(obj3, 0, 0, 1024, 512);
	ObjSprite2D_SetDestCenter(obj3);
	ObjRender_SetPosition(obj3,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
	ObjRender_SetScaleXYZ(obj3, 1);
	ObjRender_SetBlendType(obj3, BLEND_ADD_ARGB);
	//ObjRender_SetColor(obj3, 255,255,128);
	
	let obj4s = [];
	ascent(i in 0..3)
	{
		let obj4 = ObjPrim_Create(OBJ_SPRITE_2D); 
		Obj_SetRenderPriorityI(obj4, 22); 
		ObjPrim_SetTexture(obj4, IMG_STAGE_04A_SPELL_03); 
		ObjSprite2D_SetSourceRect(obj4, 0, 0,512, 512);
		ObjSprite2D_SetDestRect(obj4, 0, 0, 512, 512);
		ObjSprite2D_SetDestCenter(obj4);
		ObjRender_SetPosition(obj4,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
		ObjRender_SetScaleXYZ(obj4, 1);
		ObjRender_SetScaleXYZ(obj4, 1+0.75*i);
		ObjRender_SetBlendType(obj4, BLEND_SUBTRACT);
		//ObjRender_SetColor(obj4, [0,128,128][i], [0,128,0][i], [128,0,0][i]);
		//ObjRender_SetColor(obj4,0,0,0);
		obj4s ~= [obj4];
		
	}
	//ObjRender_SetBlendType(obj4, BLEND_ADD_ARGB);
	
	let alpha1 = 0;
	let c = 0;
	let scrollSpd_bg01 = 0.25;
	let scrlSpd1 = 0.5;
	let scrlSpd2 = -0.5;
	while(true)
	{
		if(GetCommonData("SpellCardBG1",false)==true && GetCommonData("Stage4a_Phase",0)==1)
		{
			if(alpha1 < 1)
			{ 
				alpha1 += 1/10;
			}
		} 
		else
		{
			if(alpha1>0)
			{
				alpha1 -= 1/40;
			}
		}
		
		ObjRender_SetPosition(obj,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
		ObjRender_SetPosition(obj2,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
		ObjRender_SetPosition(obj3,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
		
		ObjRender_SetAlpha(obj, 255*alpha1);
		ObjRender_SetColor(obj2, 255*alpha1,255*alpha1,255*alpha1);
		ObjRender_SetAlpha(obj3, 32*alpha1);
		ascent(i in 0..3)
		{
			ObjRender_SetPosition(obj4s[i],GetStgFrameWidth/2,GetStgFrameHeight/2,0);
			ObjRender_SetAlpha(obj4s[i], [0,0,32][i]*alpha1);
			//ObjRender_SetAngleZ(obj4s[i], -c*0.05 * [1,-1,1][i]);
		}
		ObjRender_SetAngleZ(obj2, c*0.1);
		c++;
		yield;
	}
}

task DuoBG()
{
	let obj = ObjPrim_Create(OBJ_SPRITE_2D); 
	Obj_SetRenderPriorityI(obj, 22); 
	ObjPrim_SetTexture(obj, IMG_STAGE_01B_SPELL_00); 
	ObjSprite2D_SetSourceRect(obj, 0, 0,1024, 512);
	ObjSprite2D_SetDestRect(obj, 0, 0, 1024, 512);
	ObjSprite2D_SetDestCenter(obj);
	ObjRender_SetPosition(obj,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
	ObjRender_SetScaleXYZ(obj, 1);
	
	let obj2 = ObjPrim_Create(OBJ_SPRITE_2D); 
	Obj_SetRenderPriorityI(obj2, 23); 
	ObjPrim_SetTexture(obj2, IMG_STAGE_04A_SPELL_01); 
	ObjSprite2D_SetSourceRect(obj2, 0, 0,512, 512);
	ObjSprite2D_SetDestRect(obj2, 0, 0, 512, 512);
	ObjSprite2D_SetDestCenter(obj2);
	ObjRender_SetPosition(obj2,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
	ObjRender_SetBlendType(obj2, BLEND_SHADOW );
	ObjRender_SetScaleXYZ(obj2, 1.6);
	
	let obj3 = ObjPrim_Create(OBJ_SPRITE_2D); 
	Obj_SetRenderPriorityI(obj3, 23); 
	ObjPrim_SetTexture(obj3, IMG_STAGE_01B_SPELL_02); 
	ObjSprite2D_SetSourceRect(obj3, 0, 0,1024, 1024);
	ObjSprite2D_SetDestRect(obj3, 0, 0, 1024, 1024);
	ObjSprite2D_SetDestCenter(obj3);
	ObjRender_SetPosition(obj3,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
	ObjRender_SetScaleXYZ(obj3, 1);
	ObjRender_SetBlendType(obj3, BLEND_SUBTRACT);
	
	let scrlSpd2 = -0.5;
	let alpha1 = 0;
	let c = 0;
	while(true)
	{
		if(GetCommonData("SpellCardBG1",false)==true && GetCommonData("Stage4a_Phase",0)==2)
		{
			if(alpha1 < 1)
			{ 
				alpha1 += 1/10;
			}
		} 
		else
		{
			if(alpha1>0)
			{
				alpha1 -= 1/40;
			}
		}
		
		ObjRender_SetPosition(obj,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
		ObjRender_SetPosition(obj2,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
		ObjRender_SetPosition(obj3,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
			
		ObjRender_SetAlpha(obj, 255*alpha1);
		ObjRender_SetColor(obj2, 255*alpha1,255*alpha1,255*alpha1);
		ObjRender_SetAlpha(obj3, 32*alpha1);
		ObjRender_SetAngleZ(obj2, c*0.1);
		ObjSprite2D_SetSourceRect(obj3, 0, c*scrlSpd2,1024, 1024+c*scrlSpd2);
		c++;
		yield;
	}
}