#include "./../../lib/lib_stageall.txt"
let GCSD=GetCurrentScriptDirectory();
let bSpell = false;
let current = GetCurrentScriptDirectory();
let fo = 0;
let adder = 0;

@Initialize
{
	TCallBg;
	ResetBG;
	SetAutoDeleteObject(true);
}

@MainLoop
{

	yield;
}
let counter = 0;
task TCallBg
{
	SpellBG;
	MansionBG;
}

task MansionBG
{
	let obj = ObjPrim_Create(OBJ_SPRITE_2D); //2Dスプライトオブジェクト生成
	Obj_SetRenderPriorityI(obj, 18); //描画優先度を設定
	ObjPrim_SetTexture(obj, IMG_STAGE_01C_SKY); //テクスチャを設定
	ObjSprite2D_SetSourceRect(obj, 0, 0,2048, 1024);
	ObjSprite2D_SetDestRect(obj, 0, 0, 2048, 1024);
	ObjSprite2D_SetDestCenter(obj);
	ObjRender_SetPosition(obj, GetStgFrameWidth/2, GetStgFrameHeight/2, 0);
	ObjRender_SetScale(obj, 0.6);
	ObjRender_SetColor(obj,130,130,160);
	let alpha1 = 0;
	let x = GetStgFrameWidth/2;
	let y = GetStgFrameHeight/2;
	while(true)
	{
		let distx = Get_Distance(GetPlayerX, 0, GetStgFrameWidth/2,0);
		let disty = Get_Distance(0, GetPlayerY, 0,GetStgFrameHeight/2);
		let bitx = 1;
		let bity = 1;
		if(GetPlayerX<GetStgFrameWidth/2){bitx=-1;}
		if(GetPlayerY<GetStgFrameHeight/2){bity=-1;}
		ObjRender_SetPosition(obj,x,y,0);
		x = x*0.99+(GetStgFrameWidth/2+distx/13*bitx)*0.01;
		y = y*0.99+(GetStgFrameHeight/2+disty/13*bity)*0.01;
		yield;
	}
	Obj_Delete(obj);
}

task ResetBG
{
	SetCameraFocusX(-600);
	SetCameraFocusY(100);
	SetCameraFocusZ(0);
	SetCameraAzimuthAngle(0);
	SetCameraElevationAngle(0);
	SetCameraRadius(200);

	SetCameraPerspectiveClip(0,7000);
	SetFogParam(5000, 7000, 0,0,0);
}
task SpellBGFlatColor
{
	let obj = ObjPrim_Create(OBJ_SPRITE_2D); //2Dスプライトオブジェクト生成
	Obj_SetRenderPriorityI(obj, 24); //描画優先度を設定
	ObjPrim_SetTexture(obj, GetCurrentScriptDirectory~"./../../../img/background/BG1/pixel.png"); //テクスチャを設定
	ObjSprite2D_SetSourceRect(obj, 0, 0,GetScreenWidth, GetScreenHeight);
	ObjSprite2D_SetDestRect(obj, 0, 0, GetScreenWidth, GetScreenHeight);
	ObjSprite2D_SetDestCenter(obj);
	ObjRender_SetColor(obj,0,0,0);
	let alpha1 = 0;
	while(true)
	{
		if(GetCommonData("SpellCardBG1",false)==true)
		{
			if(alpha1 < 1)
			{ 
				alpha1 += 1/10;
			}
		} 
		else
		{
			if(alpha1>0)
			{
				alpha1 -= 1/40;
			}
		}
		ObjRender_SetAlpha(obj,32*alpha1);
		ObjRender_SetPosition(obj,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
		yield;
	}
	Obj_Delete(obj);
}

task SpellBG
{
	SpellBGFlatColor;
	
	let path = IMG_STAGE_01C_SPELL_00;
	let path2 = IMG_STAGE_01C_SPELL_01;
	let path3 = IMG_STAGE_01C_SPELL_02;
	let obj = ObjPrim_Create(OBJ_SPRITE_2D);
	Obj_SetRenderPriorityI(obj, 23);
	ObjPrim_SetTexture(obj, path);
	ObjSprite2D_SetSourceRect(obj, 0, 0, 1024, 1024);
	ObjSprite2D_SetDestCenter(obj);
	ObjRender_SetPosition(obj, GetStgFrameWidth/2, GetStgFrameHeight/2, 0);

	let obj2 = ObjPrim_Create(OBJ_SPRITE_2D);
	Obj_SetRenderPriorityI(obj2, 23);
	ObjPrim_SetTexture(obj2, path2);
	ObjSprite2D_SetSourceRect(obj2, 0, 0, 1024, 1024);
	ObjSprite2D_SetDestCenter(obj2);
	ObjRender_SetPosition(obj2, GetStgFrameWidth/2, GetStgFrameHeight/2, 0);
	ObjRender_SetBlendType(obj2, BLEND_ADD_ARGB);

	let obj3 = ObjPrim_Create(OBJ_SPRITE_2D);
	Obj_SetRenderPriorityI(obj3, 23);
	ObjPrim_SetTexture(obj3, path3);
	ObjSprite2D_SetSourceRect(obj3, 0, 0, 1024, 1024);
	ObjSprite2D_SetDestCenter(obj3);
	ObjRender_SetPosition(obj3, GetStgFrameWidth/2, GetStgFrameHeight/2, 0);
	ObjRender_SetBlendType(obj3, BLEND_SUBTRACT);
	ObjRender_SetScale(obj3, 0.9);
	let alpha1 = 0;
	let pos = 0;
	let zangle = 0;
	while(true)
	{
		if(GetCommonData("SpellCardBG1",false)==true)
		{
			if(alpha1 < 1)
			{ 
				alpha1 += 1/10;
			}
		} 
		else
		{
		if(alpha1>0)
			{
				alpha1 -= 1/40;
			}
		}
		ObjSprite2D_SetSourceRect(obj, 0, -pos, 1024, 1024 - pos);
		ObjRender_SetAlpha(obj, 255*alpha1);

		ObjRender_SetAngleZ(obj2, zangle);
		ObjRender_SetAlpha(obj2, 255*alpha1*0.35);

		ObjRender_SetAngleZ(obj3, -zangle);
		ObjRender_SetColor(obj3, 255*alpha1*0.35, 255*alpha1*0.35, 255*alpha1*0.35);
		
		pos += 0.25;
		zangle += 0.075;
		yield;
	}

	
}
