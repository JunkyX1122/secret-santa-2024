#include "./../../lib/lib_stageall.txt"
let GCSD=GetCurrentScriptDirectory();
let bSpell = false;
let current = GetCurrentScriptDirectory();
let fo = 0;
let adder = 0;
let fogStart = 270;
let fogEnd = 325;
let fogR = 0;
let fogG = 0;
let fogB = 0;
@Initialize
{
	TCallBg;
	ResetBG;
	SetAutoDeleteObject(true);
}

@MainLoop
{

	yield;
}
let counter = 0;
task TCallBg
{
	SpellBG;
	Normal();
}
task ResetBG
{
	SetCameraFocusX(0);
	SetCameraFocusY(0);
	SetCameraFocusZ(0);
	SetCameraElevationAngle(0);
	SetCameraPitch(0);
	SetCameraYaw(0);
	SetCameraRoll(0);
	SetCameraRadius(0);
	SetCameraElevationAngle(0);
	
	SetCameraRadius(300);
	SetCameraAzimuthAngle(90);
	SetCameraElevationAngle(-75);
	SetFogParam(fogStart, fogEnd, fogR, fogG, fogB);

}

task Normal {

	let obj = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjRender_SetBlendType(obj, BLEND_ALPHA);
	Obj_SetRenderPriority(obj, 0.21);
	ObjPrim_SetTexture(obj, IMG_STAGE_05_SKY);
	ObjSprite2D_SetSourceRect(obj, 0, 0, 384, 268);
	ObjSprite2D_SetDestCenter(obj);
	ObjRender_SetPosition(obj, 320, 64, 0);
	ObjRender_SetScaleXYZ(obj, 2, 1, 0);
	ObjSprite2D_SetDestCenter(obj);
	
	let obj2 = ObjPrim_Create(OBJ_SPRITE_3D);
	Obj_SetRenderPriority(obj2, 0.20);
	ObjPrim_SetTexture(obj2, IMG_STAGE_05_WATER);
	ObjRender_SetPosition(obj2, 0, -194, 0);
	let c = 0;
	
	loop 
	{
		ObjRender_SetPosition(obj, 320, 64, 0);
		ObjRender_SetPosition(obj2, 0, -194, 0);
		ObjSprite3D_SetSourceDestRect(obj2, 0, c, 512, 512 + c);
		c++;
		yield;
	}
}
task SpellFlatColor
{
	let obj = ObjPrim_Create(OBJ_SPRITE_2D); //2Dスプライトオブジェクト生成
	Obj_SetRenderPriorityI(obj, 24); //描画優先度を設定
	ObjPrim_SetTexture(obj, IMG_PIXEL); //テクスチャを設定
	ObjSprite2D_SetSourceRect(obj, 0, 0,GetScreenWidth, GetScreenHeight);
	ObjSprite2D_SetDestRect(obj, 0, 0, GetScreenWidth, GetScreenHeight);
	ObjSprite2D_SetDestCenter(obj);
	ObjRender_SetColor(obj,0,0,0);
	let alpha1 = 0;
	while(true)
	{
		if(GetCommonData("SpellCardBG1",false)==true)
		{
			if(alpha1 < 1)
			{ 
				alpha1 += 1/10;
			}
		} 
		else
		{
			if(alpha1>0)
			{
				alpha1 -= 1/40;
			}
		}
		ObjRender_SetAlpha(obj,64*alpha1);
		ObjRender_SetPosition(obj,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
		yield;
	}
	Obj_Delete(obj);
}

task SpellBG
{
	SpellFlatColor();
	
	let obj = ObjPrim_Create(OBJ_SPRITE_2D); 
	Obj_SetRenderPriorityI(obj, 22); 
	ObjPrim_SetTexture(obj, IMG_STAGE_05_SPELL_00); 
	ObjSprite2D_SetSourceRect(obj, 0, 0,1024, 512);
	ObjSprite2D_SetDestRect(obj, 0, 0, 1024, 512);
	ObjSprite2D_SetDestCenter(obj);
	ObjRender_SetPosition(obj,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
	ObjRender_SetScaleXYZ(obj, 1);
	
	let bit = 1;
	
	CreateBox(
		GetStgFrameWidth/2, 
		GetStgFrameHeight/2, 
		bit, 
		-0.1, 
		-0.5, 
		1, 
		0.6, 
		-0.6, 
		IMG_STAGE_05_SPELL_01, 
		IMG_STAGE_05_SPELL_02, 
		BLEND_ADD_ARGB);
		
	let obj2 = ObjPrim_Create(OBJ_SPRITE_2D); 
	Obj_SetRenderPriorityI(obj2, 23); 
	ObjPrim_SetTexture(obj2, IMG_STAGE_05_SPELL_03); 
	ObjSprite2D_SetSourceRect(obj2, 0, 0,1024, 1024);
	ObjSprite2D_SetDestRect(obj2, 0, 0, 1024, 1024);
	ObjSprite2D_SetDestCenter(obj2);
	ObjRender_SetPosition(obj2,GetStgFrameWidth/2+30,GetStgFrameHeight/2,0);
	ObjRender_SetScaleXYZ(obj2, 0.6);
	ObjRender_SetColor(obj2, 0,0,0);
	
	let obj3 = ObjPrim_Create(OBJ_SPRITE_2D); 
	Obj_SetRenderPriorityI(obj3, 22); 
	ObjPrim_SetTexture(obj3, IMG_STAGE_05_SPELL_04); 
	ObjSprite2D_SetSourceRect(obj3, 0, 0,512, 512);
	ObjSprite2D_SetDestRect(obj3, 0, 0, 512, 512);
	ObjSprite2D_SetDestCenter(obj3);
	ObjRender_SetPosition(obj3,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
	ObjRender_SetScaleXYZ(obj3, 0.8);
	ObjRender_SetColor(obj3, 0,0,0);
	
	let obj4 = ObjPrim_Create(OBJ_SPRITE_2D); 
	Obj_SetRenderPriorityI(obj4, 22); 
	ObjPrim_SetTexture(obj4, IMG_STAGE_05_SPELL_04); 
	ObjSprite2D_SetSourceRect(obj4, 0, 0,512, 512);
	ObjSprite2D_SetDestRect(obj4, 0, 0, 512, 512);
	ObjSprite2D_SetDestCenter(obj4);
	ObjRender_SetPosition(obj4,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
	ObjRender_SetScaleXYZ(obj4, 1.2, -1.2, 0);
	ObjRender_SetColor(obj4, 0,0,0);
		
		
	let obj5 = ObjPrim_Create(OBJ_SPRITE_2D); 
	Obj_SetRenderPriorityI(obj5, 22); 
	ObjPrim_SetTexture(obj5, IMG_STAGE_05_SPELL_05); 
	ObjSprite2D_SetSourceRect(obj5, 0, 0,1024, 512);
	ObjSprite2D_SetDestRect(obj5, 0, 0, 1024, 512);
	ObjSprite2D_SetDestCenter(obj5);
	ObjRender_SetPosition(obj5,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
	ObjRender_SetScaleXYZ(obj5, 1);
	
	let alpha1 = 0;
	let c = 0;
	let scrollSpd_bg01 = 0.25;
	while(true)
	{
		if(GetCommonData("SpellCardBG1",false)==true)
		{
			if(alpha1 < 1)
			{ 
				alpha1 += 1/10;
			}
		} 
		else
		{
			if(alpha1>0)
			{
				alpha1 -= 1/40;
			}
		}
		
		ObjRender_SetPosition(obj,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
		ObjRender_SetPosition(obj3,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
		ObjRender_SetPosition(obj2,GetStgFrameWidth/2+30,GetStgFrameHeight/2,0);
		ObjRender_SetPosition(obj4,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
		ObjRender_SetPosition(obj5,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
	
		ObjRender_SetAlpha(obj, 255*alpha1);
		ObjRender_SetAlpha(obj2, 255*alpha1);
		
		ObjRender_SetAlpha(obj3, 128*alpha1);
		ObjRender_SetAngleZ(obj3, c*0.25);
		
		ObjRender_SetAlpha(obj4, 96*alpha1);
		ObjRender_SetAngleZ(obj4, c*-0.25);
		
		
		ObjRender_SetAlpha(obj5, 128*alpha1);
		ObjSprite2D_SetSourceRect(obj5, 0, 0+c*0.5,1024, 512+c*0.5);
		c++;
		yield;
	}

}
task CreateBox(x, y, bit, spinn, sideScroll, twist, ySpd1, ySpd2, img1, img2, blendType)
{
	
	let dir = GetCurrentScriptDirectory();
	let path = IMG_SAURA;

	let obj = ObjPrim_Create(OBJ_PRIMITIVE_2D); //2Dスプライトオブジェクト生成
	ObjPrim_SetPrimitiveType(obj, PRIMITIVE_TRIANGLEFAN);
	ObjPrim_SetVertexCount(obj, 4);
	Obj_SetRenderPriorityI(obj, 22); //描画優先度を設定
	ObjPrim_SetTexture(obj, path); //テクスチャを設定
	
	ObjPrim_SetVertexPosition(obj, 0, -512, -512, 0);
	ObjPrim_SetVertexPosition(obj, 1, 512, -512, 0); 
	ObjPrim_SetVertexPosition(obj, 2, 512, 512, 0);
	ObjPrim_SetVertexPosition(obj, 3, -512, 512, 0);
	
	ObjPrim_SetVertexUVT(obj, 0, 0, 0);
	ObjPrim_SetVertexUVT(obj, 1, 256, 0);
	ObjPrim_SetVertexUVT(obj, 2, 256, 256);
	ObjPrim_SetVertexUVT(obj, 3, 0, 256);
	

	ObjShader_SetShaderF(obj, GetCurrentScriptDirectory()~"hlslring.txt");
	//ObjRender_SetScaleXYZ(obj,0.5,0.5,0);
	ObjRender_SetPosition(obj,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
	//ObjRender_SetBlendType(obj, BLEND_ADD_ARGB);
	ObjRender_SetBlendType(obj,blendType);
	//ObjRender_SetColor(obj, 225, 255, 225);
	let timer = 0;
	
	ObjShader_SetTexture(obj, "texture_0", img1);
	ObjShader_SetTexture(obj, "texture_1", img2);
	ObjShader_SetTechnique(obj, "TecFire");
	let alpha1 = 0;
	while(true)
	{
		if(GetCommonData("SpellCardBG1",false)==true)
		{
			if(alpha1 < 1)
			{ 
				alpha1 += 1/10;
			}
		} 
		else
		{
			if(alpha1>0)
			{
				alpha1 -= 1/40;
			}
		}
		
		ObjRender_SetAlpha(obj, 255*alpha1);
		ObjShader_SetFloat(obj, "time", timer);
		//ObjShader_SetFloat(obj, "rotation", timer);
		ObjShader_SetFloat(obj, "scroll_x", sideScroll);
		ObjShader_SetFloat(obj, "scroll_y", -ySpd1);
		ObjShader_SetFloat(obj, "scroll_y2", -ySpd2);
		ObjShader_SetFloat(obj, "spinAmount", twist);

		
		let ang = ObjRender_GetAngleZ(obj);
		
		ObjRender_SetPosition(obj,GetStgFrameWidth/2,GetStgFrameHeight/2,0);
		ObjRender_SetAngleZ(obj,ang+spinn);
		timer++;
		yield;
	}

}