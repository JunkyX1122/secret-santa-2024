function CharacterSelectScreen()
{
	hasSelected = false;
	characterSelect_AlphaScl = 1;
	menuState = MENUSTATE_CHARACTER_SELECT;
	Char_BoxRender();
	Char_BoxDetails();
	Char_PlayerIcons();
	Char_SpellBGs();
	ascent(i in 0..3)
	{
		RenderTeam(i);
	}
	SkippableWait(TO_CHARSELECT_TRANSITION);
	yield;
	
	let hasCanceled = false;
	while(menuState==MENUSTATE_CHARACTER_SELECT && !hasSelected && !hasCanceled)
	{
		CharacterMenuSelectMove();
		if(GetVirtualKeyState(VK_OK) == KEY_PUSH)
		{
			hasSelected = true;
			SE_PlayLen(title_ok, 60);
			TeamTalk(selectedTeam);
		}
		if(GetVirtualKeyState(VK_CANCEL) == KEY_PUSH)
		{
			hasCanceled = true;
			SE_PlayLen(title_cancel, 60);
		}
		yield;
	}
	activeTeam = selectedTeam;
	if(hasCanceled)
	{
		ascent(i in 0..30)
		{
			characterSelect_AlphaScl = 1 - 1/29*i;
			SkippableWait(1);
		}
		
	}
	else
	{
		
	}
	return hasCanceled;
	//wait(120);
	//Title_Display();
}

task TeamTalk(teamID)
{
	wait(10);
	let talkDel = 5;
	ascent(i in 0..5)
	{
		alternative(teamID)
		case(PLAYERTEAM_A)
		{
			SE_PlayLen(TALK_GATO,100, rand(0.95, 1.05));
		}
		case(PLAYERTEAM_B)
		{
			SE_PlayLen(TALK_SULLEN,100, rand(0.95, 1.05));
		}
		case(PLAYERTEAM_C)
		{
			SE_PlayLen(TALK_VIIVI,100, rand(0.95, 1.05));
		}
		wait(talkDel);
	}
	wait(8);
	ascent(i in 0..5)
	{
		alternative(teamID)
		case(PLAYERTEAM_A)
		{
			SE_PlayLen(TALK_ANUBIS,100, rand(0.95, 1.05));
		}
		case(PLAYERTEAM_B)
		{
			SE_PlayLen(TALK_DAISUKE,100, rand(0.95, 1.05));
		}
		case(PLAYERTEAM_C)
		{
			SE_PlayLen(TALK_GRANDIS,100, rand(0.95, 1.05));
		}
		wait(talkDel);
	}
}


let characterMenuHoldCounter = 0;
function CharacterMenuSelectMove()
{
	let hasMoved = false;
	if(GetVirtualKeyState(VK_RIGHT) == KEY_PUSH)  { 
		MoveOption(1);
		characterMenuHoldCounter = 0; 
	}
	if(GetVirtualKeyState(VK_LEFT)   == KEY_PUSH)  { 
		MoveOption(-1);
		characterMenuHoldCounter = 0; 
	}
	if(GetVirtualKeyState(VK_RIGHT) == KEY_HOLD)  {
		characterMenuHoldCounter++;
		if(characterMenuHoldCounter > 20)
		{
			if(characterMenuHoldCounter%6==0)
			{
				MoveOption(1);
			}
		}
	}
	if(GetVirtualKeyState(VK_LEFT) == KEY_HOLD)  {
		characterMenuHoldCounter++;
		if(characterMenuHoldCounter > 20)
		{
			if(characterMenuHoldCounter%6==0)
			{
				MoveOption(-1);
			}
		}
	}
	if((GetVirtualKeyState(VK_RIGHT) == KEY_FREE && GetVirtualKeyState(VK_LEFT) == KEY_FREE) || 
	   (GetVirtualKeyState(VK_RIGHT) != KEY_FREE && GetVirtualKeyState(VK_LEFT) != KEY_FREE)) {
		characterMenuHoldCounter = 0;
	}
	
	return hasMoved;
	
	task MoveOption(am)
	{
		SE_PlayLen(title_cursor, 60);
		selectedTeam+=am;
		hasMoved = true;
		if(selectedTeam > CHARACTERMENU_TOTALOPTIONS -1) { selectedTeam = 0; }
		if(selectedTeam <  0) 						 { selectedTeam = CHARACTERMENU_TOTALOPTIONS - 1; }
	}
}

let CHARACTERMENU_TOTALOPTIONS = 3;
let TO_CHARSELECT_TRANSITION = 30;
let characterSelect_AlphaScl = 1;
let charSelectX = GetScreenWidth/2 - 192;

let selectedTeam = PLAYERTEAM_A;
const teamNames 	= ["Team Terra", "Team Paladin", "Team Granini"];
const statNames 	= ["Speed", "Shot Power", "Range", "Spell Power", "Spell Capacity", "Dth. Bomb Frames"];
const statValues	= [
						[[6, 3]		 , 	[4.25, 1.5], 	[5, 2.25]		], // Speed
						[[23.2, 23.2], 	[ 15, 26.6], 	[24, 24] 		], // Shot Power
						[[100,100],	   	[50, 20],    	[60, 85]		], // Range
						[[28.3, 32.3], 	[6, 24.9],   	[55.5, 38.4]	], // Spell Power
						[[3,3],			[4,4],			[2,2]			], // Spell Capacity
						[[25,25],		[10, 10],		[18,18]			]  // Death Bomb Time 
						];
						
const statMaxValues = [8, 40, 100, 75, 8, 30];

const tabTitles 	= ["Weapons", "Shot", "Spells"];
const tabInfoText 	= [
						["Blade, Cards, Death", "Holy Sword, Poke-abilities", "Lance, Nuclear Energy, Blades"],
						["Homing Shot, Average Power", "Narrow Shot, Cardinal Shooting", "Misdirection Lock Shot, High Skill"],
						["-Nova- -Ruin-", "&quot;Chesnaught's Aegis&quot; &quot;All-Out Sphere Attack&quot;", "&quot;Death Dagger&quot; &quot;Pilfer&quot;"]
					  ];

const charPreviews = [IMG_TITLE_CHARSELECT_PREVIEW_A, IMG_TITLE_CHARSELECT_PREVIEW_B, IMG_TITLE_CHARSELECT_PREVIEW_C];
const characterBios = [
						"A once troublesome duo hailing from the world of[r]" ~
						"Terra. At the request of his friend the god of death, the[r]" ~ 
						"feline of many names journeys into Gensokyo to learn about[r]" ~
						"the event known as 'Christmas'. Hopefully the cat doesn't[r]" ~ 
						"get too distracted...", 
						"A priest and the son of a friend. The two are headed[r]" ~
						"towards the Human Village after the priest hears about a[r]" ~ 
						"potential conflict. What started out as an early-morning[r]" ~
						"trip may result in the wannabe hero learning some wisdom[r]" ~ 
						"regarding his end goal.", 
						"An ex-hero and her trusted dragon partner...And a 'friend'.[r]" ~ 
						"As a result of her small winter wardrobe, the three make[r]" ~ 
						"their way to the Human Village to go clothes shopping. It[r]" ~
						"should be as simple as that, right?..."];
					  //---------------------------------------------------
						
const CHAR_ICONS = [IMG_TITLE_CHARSELECT_ICON_A, IMG_TITLE_CHARSELECT_ICON_B, IMG_TITLE_CHARSELECT_ICON_C];						
task Char_PlayerIcons()
{
	ascent(i in 0..3)
	{
		MakeIcon(charSelectX - 64 + 64*i, GetScreenHeight/2 - 190, i);
	}
	
	task MakeIcon(x,y,id)
	{
		let objCSIc = ObjPrim_Create(OBJ_SPRITE_2D);
		ObjPrim_SetTexture(objCSIc, CHAR_ICONS[id]);
		Obj_SetRenderPriorityI(objCSIc, BASE_RENDERI+7);
		ObjSprite2D_SetSourceRect(objCSIc,0, 0, 64, 64);
		ObjSprite2D_SetDestRect(objCSIc,0, 0, 64, 64);
		ObjSprite2D_SetDestCenter(objCSIc);
		ObjRender_SetPosition(objCSIc,x,y,0);
		
		let coll = 128;
		ObjRender_SetColor(objCSIc, coll, coll, coll);
		
		let t = TO_CHARSELECT_TRANSITION;
		ascent(i in 0..t)
		{	
			let scl = 1*sin(90/(t-1)*i);
			ObjRender_SetAlpha(objCSIc, 255*scl);
			SkippableWait(1);
		}
		yield;
		while(menuState==MENUSTATE_CHARACTER_SELECT)
		{
			let colTarg = 128;
			if(selectedTeam == id)
			{
				colTarg = 255;
			}
			coll = coll * 0.8 + colTarg * 0.2;
			ObjRender_SetColor(objCSIc, coll, coll, coll);
			ObjRender_SetAlpha(objCSIc, 255*characterSelect_AlphaScl);
			yield;
		}
		Obj_Delete(objCSIc);
	}
}
const NAME_BG_COLOURS = [[0,0,0], [128,255,128], [128,0,0]];
						
task Char_BoxDetails()
{
	let objNBG = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objNBG, IMG_TITLE_CHARSELECT_NAMEBG);
	Obj_SetRenderPriorityI(objNBG, BASE_RENDERI+7);
	ObjSprite2D_SetSourceRect(objNBG,0, 0, 256, 32);
	ObjSprite2D_SetDestRect(objNBG,0, 0, 256, 32);
	ObjSprite2D_SetDestCenter(objNBG);
	ObjRender_SetPosition(objNBG,charSelectX,GetScreenHeight/2-152,0);
	ObjRender_SetColor(objNBG,NAME_BG_COLOURS[selectedTeam][0],NAME_BG_COLOURS[selectedTeam][1],NAME_BG_COLOURS[selectedTeam][2]);
	
	Previews();
	ascent(i in 0..6)
	{
		StatIcons(charSelectX - 165 + 121 * (i%3), GetScreenHeight/2 + 25 + 26 * floor(i/3),i);
	}
	ascent(i in 0..3)
	{
		InfoTabs(charSelectX - 157,GetScreenHeight/2-1 - 44 + 22*i,i);
	}
	
	let objArrows = [];
	ascent(i in 0..2)
	{
		let objAr = ObjPrim_Create(OBJ_SPRITE_2D);
		ObjPrim_SetTexture(objAr, IMG_TITLE_MAINMENU_SELECTARROW);
		Obj_SetRenderPriorityI(objAr, BASE_RENDERI+7);
		ObjSprite2D_SetSourceRect(objAr,0, 0, 64, 32);
		ObjSprite2D_SetDestRect(objAr,0, 0, 64, 32);
		ObjSprite2D_SetDestCenter(objAr);
		ObjRender_SetScaleXYZ(objAr, (1-2*i) * 0.8, 1 * 0.8, 0);
		ObjRender_SetBlendType(objAr, BLEND_ADD_ARGB);
		ObjRender_SetPosition(objAr, charSelectX - 140*[1,-1][i], GetScreenHeight/2-152-3, 0);
		ObjRender_SetTextureFilter(objAr, FILTER_NONE,FILTER_NONE,FILTER_NONE);
		objArrows ~= [objAr];
	}
	
	let objArrowsPage = [];
	ascent(i in 0..2)
	{
		let objArPa = ObjPrim_Create(OBJ_SPRITE_2D);
		ObjPrim_SetTexture(objArPa, IMG_TITLE_CHARSELECT_ARROW);
		Obj_SetRenderPriorityI(objArPa, BASE_RENDERI+7);
		ObjSprite2D_SetSourceRect(objArPa,0, 0, 64, 64);
		ObjSprite2D_SetDestRect(objArPa,0, 0, 64, 64);
		ObjSprite2D_SetDestCenter(objArPa);
		ObjRender_SetScaleXYZ(objArPa, -(1-2*i), 1, 0);
		//ObjRender_SetBlendType(objArPa, BLEND_ADD_ARGB);
		ObjRender_SetPosition(objArPa, GetScreenWidth/2 - (GetScreenWidth/2 - 32 - 16)*[1,-1][i], GetScreenHeight/2, 0);
		objArrowsPage ~= [objArPa];
	}
	
	let objTeamNamesText = CreateText(
		"",
		25,
		[[255,255,255],
		[255,255,200]],
		[0,0,0],
		charSelectX,
		GetScreenHeight/2-152,
		"Lucida Fax Demibold",
		BASE_RENDERI+7);
		
	ObjText_SetFontBorderWidth(objTeamNamesText, 2);
	ObjText_SetFontBorderType(objTeamNamesText, BORDER_FULL);
	ObjText_SetSidePitch(objTeamNamesText, -1);
	
	let objBioText = CreateText(
		"A",
		14,
		[[255,255,255],
		 [255,255,200]],
		[0,0,0],
		charSelectX - 176,
		GetScreenHeight/2 - 130,
		"Lucida Fax Demibold",
		BASE_RENDERI+7);
	//ObjText_SetSidePitch(objBioText, -1);
	ObjText_SetLinePitch(objBioText, -1);
	ObjText_SetText(objBioText, characterBios[selectedTeam]);
	RenameRecenterText(objTeamNamesText, teamNames[selectedTeam], charSelectX,GetScreenHeight/2-156);
	ObjText_SetText(objBioText, characterBios[selectedTeam]);
	let c = 0;
	let t = TO_CHARSELECT_TRANSITION;
	ascent(i in 0..t)
	{	
		let scl = 1*sin(90/(t-1)*i);
		ObjRender_SetAlpha(objNBG, 255*scl);
		ObjRender_SetAlpha(objTeamNamesText, 255*scl);
		ObjRender_SetAlpha(objBioText, 255*scl);
		ascent(i in 0..2)
		{
			ObjRender_SetAlpha(objArrows[i], 255*scl);
			ObjRender_SetAlpha(objArrowsPage[i], 255*scl);
			ObjRender_SetPosition(objArrowsPage[i], round(GetScreenWidth/2 - (GetScreenWidth/2 - 16 - 8 + 4*sin(c*3))*[1,-1][i]), GetScreenHeight/2, 0);
		}
		c++;
		SkippableWait(1);
	}
	yield;
	
	
	let selectedColour = NAME_BG_COLOURS[selectedTeam];
	let bgR = selectedColour[0];
	let bgG = selectedColour[1];
	let bgB = selectedColour[2];
	while(menuState==MENUSTATE_CHARACTER_SELECT)
	{
		RenameRecenterText(objTeamNamesText, teamNames[selectedTeam], charSelectX,GetScreenHeight/2-156);
		
		selectedColour = NAME_BG_COLOURS[selectedTeam];
		bgR = bgR * 0.9 + selectedColour[0] * 0.1;
		bgG = bgG * 0.9 + selectedColour[1] * 0.1;
		bgB = bgB * 0.9 + selectedColour[2] * 0.1;
		ObjRender_SetColor(objNBG,bgR, bgG, bgB);
		
		ObjRender_SetAlpha(objTeamNamesText, 255*characterSelect_AlphaScl);
		ObjRender_SetAlpha(objNBG, 255*characterSelect_AlphaScl);
		ObjRender_SetAlpha(objBioText, 255*characterSelect_AlphaScl);
		ObjText_SetText(objBioText, characterBios[selectedTeam]);
		ascent(i in 0..2)
		{
			ObjRender_SetAlpha(objArrows[i], 255*characterSelect_AlphaScl);
			ObjRender_SetAlpha(objArrowsPage[i], 255*characterSelect_AlphaScl);
			ObjRender_SetPosition(objArrowsPage[i], round(GetScreenWidth/2 - (GetScreenWidth/2 - 16 - 8 + 4*sin(c*3))*[1,-1][i]), GetScreenHeight/2, 0);
		}
		c++;
		yield;
	}
	Obj_Delete(objBioText);
	Obj_Delete(objNBG);
	Obj_Delete(objTeamNamesText);
	ascent(i in 0..2)
	{
		Obj_Delete(objArrows[i]);
		Obj_Delete(objArrowsPage[i]);
	}
	
	task Previews()
	{
		let objCSPr = ObjPrim_Create(OBJ_SPRITE_2D);
		ObjPrim_SetTexture(objCSPr, charPreviews[selectedTeam]);
		Obj_SetRenderPriorityI(objCSPr, BASE_RENDERI+7);
		ObjSprite2D_SetSourceRect(objCSPr,0, 0, 512, 128);
		ObjSprite2D_SetDestRect(objCSPr,0, 0, 512, 128);
		ObjSprite2D_SetDestCenter(objCSPr);
		ObjRender_SetPosition(objCSPr,charSelectX-1,GetScreenHeight/2+134,0);
		let t = TO_CHARSELECT_TRANSITION;
		ascent(i in 0..t)
		{	
			let scl = 1*sin(90/(t-1)*i);
			ObjRender_SetAlpha(objCSPr, 255*scl);
			SkippableWait(1);
		}
		let currentTeam = selectedTeam;
		while(menuState==MENUSTATE_CHARACTER_SELECT)
		{
			if(currentTeam!=selectedTeam)
			{
				currentTeam = selectedTeam;
				ObjPrim_SetTexture(objCSPr, charPreviews[currentTeam]);
				
			}
			ObjRender_SetAlpha(objCSPr, 255*characterSelect_AlphaScl);
			yield;
		}
		Obj_Delete(objCSPr);
	}
	
	task InfoTabs(x,y,id)
	{
		let objCST = ObjPrim_Create(OBJ_SPRITE_2D);
		ObjPrim_SetTexture(objCST, IMG_TITLE_CHARSELECT_TAB);
		Obj_SetRenderPriorityI(objCST, BASE_RENDERI+7);
		ObjSprite2D_SetSourceRect(objCST, 0, 0, 128, 32);
		ObjSprite2D_SetDestRect(objCST,   0, 0, 128, 32);
		ObjSprite2D_SetDestCenter(objCST);
		ObjRender_SetPosition(objCST,x,y,0);
		
		let objTabTitleText = CreateText(
		tabTitles[id],
		15,
		[[255,255,255],
		 [255,255,200]],
		[0,0,0],
		x,
		y-1,
		"Lucida Fax Demibold",
		BASE_RENDERI+7);
		ObjText_SetSidePitch(objTabTitleText, -1);
		
		let objTabText = CreateText(
		"A",
		15,
		[[255,255,255],
		 [255,255,255]],
		[0,0,0],
		x + 45,
		y-1,
		"Lucida Fax Demibold",
		BASE_RENDERI+7);
		ObjText_SetText(objTabText, tabInfoText[id][selectedTeam]);
		
		let t = TO_CHARSELECT_TRANSITION;
		
		ascent(i in 0..t)
		{	
			let scl = 1*sin(90/(t-1)*i);
			ObjRender_SetAlpha(objCST, 255*scl);
			ObjRender_SetAlpha(objTabTitleText, 255*scl);
			ObjRender_SetAlpha(objTabText, 255*scl);
			SkippableWait(1);
		}
		
		//ObjText_SetSidePitch(objTabText, -1);
		while(menuState==MENUSTATE_CHARACTER_SELECT)
		{
			ObjText_SetText(objTabText, tabInfoText[id][selectedTeam]);
			ObjRender_SetAlpha(objCST, 255*characterSelect_AlphaScl);
			ObjRender_SetAlpha(objTabTitleText, 255*characterSelect_AlphaScl);
			ObjRender_SetAlpha(objTabText, 255*characterSelect_AlphaScl);
			yield;
		}
		Obj_Delete(objCST);
		Obj_Delete(objTabTitleText);
		Obj_Delete(objTabText);
	}
	
	task StatIcons(x,y,id)
	{
		let objCSSI = ObjPrim_Create(OBJ_SPRITE_2D);
		ObjPrim_SetTexture(objCSSI, IMG_TITLE_CHARSELECT_STATICONS);
		Obj_SetRenderPriorityI(objCSSI, BASE_RENDERI+7);
		ObjSprite2D_SetSourceRect(objCSSI, 32*id, 0, 32*(id+1), 32);
		ObjSprite2D_SetDestRect(objCSSI,   32*id, 0, 32*(id+1), 32);
		ObjSprite2D_SetDestCenter(objCSSI);
		ObjRender_SetPosition(objCSSI,x,y,0);
		
		let objBarBack = ObjPrim_Create(OBJ_PRIMITIVE_2D);
		ObjPrim_SetPrimitiveType(objBarBack,PRIMITIVE_TRIANGLESTRIP);
		ObjPrim_SetVertexCount(objBarBack, 4);
		Obj_SetRenderPriorityI(objBarBack,BASE_RENDERI+7);
		ObjPrim_SetVertexPosition(objBarBack , 0, 0, -3,0);
		ObjPrim_SetVertexPosition(objBarBack , 1, 0,  3,0);
		ObjPrim_SetVertexPosition(objBarBack , 2, 75, -3,0);
		ObjPrim_SetVertexPosition(objBarBack , 3, 75,  3,0);
		ObjRender_SetPosition(objBarBack, x + 7, y + 5, 0);
		ObjRender_SetColor(objBarBack, 0,0,0);
		
		let objStatTitle = CreateText(
		"",
		14,
		[[255,255,255],
		[255,255,200]],
		[0,0,0],
		x + 9,
		y-12,
		"Lucida Fax Demibold",
		BASE_RENDERI+7);
		ObjText_SetText(objStatTitle, statNames[id]);
		ObjText_SetSidePitch(objStatTitle, -1);
		
		let t = TO_CHARSELECT_TRANSITION;
		
		ascent(i in 0..t)
		{	
			let scl = 1*sin(90/(t-1)*i);
			ObjRender_SetAlpha(objCSSI, 255*scl);
			ObjRender_SetAlpha(objBarBack, 255*scl);
			ObjRender_SetAlpha(objStatTitle, 255*scl);
			SkippableWait(1);
		}
		
		let objBars = [];
		ascent(o in 0..2)
		{
			let objBar = ObjPrim_Create(OBJ_PRIMITIVE_2D);
			ObjPrim_SetPrimitiveType(objBar,PRIMITIVE_TRIANGLESTRIP);
			ObjPrim_SetVertexCount(objBar, 4);
			Obj_SetRenderPriorityI(objBar,BASE_RENDERI+7);
			ObjPrim_SetVertexPosition(objBar , 0, 0, -2+4*o,0);
			ObjPrim_SetVertexPosition(objBar , 1, 0,  0,0);
			ObjPrim_SetVertexPosition(objBar , 2, 73, -2+4*o,0);
			ObjPrim_SetVertexPosition(objBar , 3, 73,  0,0);
			ObjRender_SetPosition(objBar, x + 8, y + 5, 0);
			let col = 255 - 128*o;
			ObjRender_SetColor(objBar, col, col, col);
			if(id==4 || id == 5)
			{	
				ObjRender_SetColor(objBar, 255, 255, 255);
			}
			objBars ~= [objBar];
		}
		
		let objStatText = CreateText(
		"30[r]30",
		13,
		[[255,255,255],
		[255,255,200]],
		[0,0,0],
		x + 92,
		y+1,
		"Lucida Fax Demibold",
		BASE_RENDERI+7);
		ObjText_SetLinePitch(objStatText, -1);
		
		
		
		let statValueSet = [0,0];
		while(menuState==MENUSTATE_CHARACTER_SELECT)
		{
			ObjRender_SetAlpha(objCSSI, 255*characterSelect_AlphaScl);
			ObjRender_SetAlpha(objBarBack, 255*characterSelect_AlphaScl);
			ObjRender_SetAlpha(objStatTitle, 255*characterSelect_AlphaScl);
			ObjRender_SetAlpha(objStatText, 255*characterSelect_AlphaScl);
			let textt = "";
			if(id==4 || id==5){ textt = textt~"[r]"; }
			ascent(o in 0..2)
			{
				statValueSet[o] = statValueSet[o] * 0.8 + statValues[id][selectedTeam][o] * 0.2;
				if(((id==4 || id==5) && o==0) || id < 4)
				{
					textt = textt~rtos("00.0",statValues[id][selectedTeam][o]);
					if(id < 4){ textt = textt~"[r]"; }
				}
				let statScl = statValueSet[o] / statMaxValues[id];
				ObjPrim_SetVertexPosition(objBars[o] , 2, round(73 * statScl), -2+4*o,0);
				ObjPrim_SetVertexPosition(objBars[o] , 3, round(73 * statScl),  0,0);
				ObjRender_SetAlpha(objBars[o], 255*characterSelect_AlphaScl);
			}
			ObjText_SetText(objStatText, textt);
			yield;
		}
		Obj_Delete(objCSSI);
		Obj_Delete(objBarBack);
		Obj_Delete(objStatText);
		Obj_Delete(objStatTitle);
		ascent(i in 0..2)
		{
			Obj_Delete(objBars[i]);
		}
	}
}

task Char_BoxRender()
{
	let objCSB = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objCSB, IMG_TITLE_CHARSELECT_BOX);
	Obj_SetRenderPriorityI(objCSB, BASE_RENDERI+7);
	ObjSprite2D_SetSourceRect(objCSB,0, 0, 1024, 512);
	ObjSprite2D_SetDestRect(objCSB,0, 0, 1024, 512);
	ObjSprite2D_SetDestCenter(objCSB);
	ObjRender_SetPosition(objCSB,GetScreenWidth/2+130,GetScreenHeight/2,0);
	ObjRender_SetBlendType(objCSB, BLEND_SHADOW);
	ObjRender_SetScaleX(objCSB, 1.4);
	ObjRender_SetScaleY(objCSB, 0.9);
	
	let objCSTL = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objCSTL, IMG_TITLE_CHARSELECT_TOPLINES);
	Obj_SetRenderPriorityI(objCSTL, BASE_RENDERI+8);
	ObjSprite2D_SetSourceRect(objCSTL,0, 0, 1024, 512);
	ObjSprite2D_SetDestRect(objCSTL,0, 0, 1024, 512);
	ObjSprite2D_SetDestCenter(objCSTL);
	ObjRender_SetPosition(objCSTL,GetScreenWidth/2,GetScreenHeight/2,0);
	
	let objCSBL = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objCSBL, IMG_TITLE_CHARSELECT_BOXLINES);
	Obj_SetRenderPriorityI(objCSBL, BASE_RENDERI+8);
	ObjSprite2D_SetSourceRect(objCSBL,0, 0, 512, 512);
	ObjSprite2D_SetDestRect(objCSBL,0, 0, 512, 512);
	ObjSprite2D_SetDestCenter(objCSBL);
	ObjRender_SetPosition(objCSBL,charSelectX,GetScreenHeight/2,0);

	let t = TO_CHARSELECT_TRANSITION;
	ascent(i in 0..t)
	{	
		let scl = 1*sin(90/(t-1)*i);
		ObjRender_SetColor(objCSB, 255*scl, 255*scl, 255*scl);
		ObjRender_SetAlpha(objCSTL, 255*scl);
		ObjRender_SetAlpha(objCSBL, 255*scl);
		SkippableWait(1);
	}
	yield;
	while(menuState==MENUSTATE_CHARACTER_SELECT)
	{
		ObjRender_SetColor(objCSB, 255*characterSelect_AlphaScl, 255*characterSelect_AlphaScl, 255*characterSelect_AlphaScl);
		ObjRender_SetAlpha(objCSTL, 255*characterSelect_AlphaScl);
		ObjRender_SetAlpha(objCSBL, 255*characterSelect_AlphaScl);
		yield;
	}
	Obj_Delete(objCSB);
	Obj_Delete(objCSTL);
	Obj_Delete(objCSBL);
}

let teamArray = [IMG_TITLE_CHARSELECT_TEAM_A, IMG_TITLE_CHARSELECT_TEAM_B, IMG_TITLE_CHARSELECT_TEAM_C];

task RenderTeam(id)
{
	let objTeamPortrait = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objTeamPortrait, teamArray[id]);
	Obj_SetRenderPriorityI(objTeamPortrait, BASE_RENDERI+5);
	ObjSprite2D_SetSourceRect(objTeamPortrait,0, 0, 512, 512);
	ObjSprite2D_SetDestRect(objTeamPortrait,0, 0, 512, 512);
	ObjSprite2D_SetDestCenter(objTeamPortrait);
	ObjRender_SetPosition(objTeamPortrait,GetScreenWidth/2+220,GetScreenHeight/2,0);

	let alpha = 0;
	while(menuState==MENUSTATE_CHARACTER_SELECT)
	{
		let alphaTarget = 0;
		if(selectedTeam == id)
		{
			alphaTarget = 1;
		}
		alpha = alpha * 0.8 + alphaTarget * 0.2;
		ObjRender_SetAlpha(objTeamPortrait, 255*alpha*characterSelect_AlphaScl);
		yield;
	}
	Obj_Delete(objTeamPortrait);
}

task Char_SpellBGs()
{
	let alphaModifier = 0.75;
	DuoBG_A();
	DuoBG_B();
	DuoBG_C();
	//SpellBGFlatColor();
	task SpellBGFlatColor
	{
		let obj = ObjPrim_Create(OBJ_SPRITE_2D); //2Dスプライトオブジェクト生成
		Obj_SetRenderPriorityI(obj, BASE_RENDERI+4); //描画優先度を設定
		ObjPrim_SetTexture(obj, IMG_PIXEL); //テクスチャを設定
		ObjSprite2D_SetSourceRect(obj, 0, 0,GetScreenWidth, GetScreenHeight);
		ObjSprite2D_SetDestRect(obj, 0, 0, GetScreenWidth, GetScreenHeight);
		ObjSprite2D_SetDestCenter(obj);
		//ObjRender_SetColor(obj,0,0,0);
		let alpha1 = 0;
		while(menuState==MENUSTATE_CHARACTER_SELECT)
		{
			ObjRender_SetAlpha(obj,32*characterSelect_AlphaScl);
			ObjRender_SetPosition(obj,GetScreenWidth/2,GetScreenHeight/2,0);
			yield;
		}
		Obj_Delete(obj);
	}
	task DuoBG_A()
	{
		let obj = ObjPrim_Create(OBJ_SPRITE_2D); 
		Obj_SetRenderPriorityI(obj, BASE_RENDERI + 3); 
		ObjPrim_SetTexture(obj, IMG_STAGE_01A_SPELL_00); 
		ObjSprite2D_SetSourceRect(obj, 0, 0,1024, 1024);
		ObjSprite2D_SetDestRect(obj, 0, 0, 1024, 1024);
		ObjSprite2D_SetDestCenter(obj);
		ObjRender_SetPosition(obj,GetScreenWidth/2,GetScreenHeight/2,0);
		ObjRender_SetScaleXYZ(obj, 0.7 * 1.5);
		
		let obj2 = ObjPrim_Create(OBJ_SPRITE_2D); 
		Obj_SetRenderPriorityI(obj2, BASE_RENDERI + 4); 
		ObjPrim_SetTexture(obj2, IMG_STAGE_01A_SPELL_01); 
		ObjSprite2D_SetSourceRect(obj2, 0, 0,1024, 1024);
		ObjSprite2D_SetDestRect(obj2, 0, 0, 1024, 1024);
		ObjSprite2D_SetDestCenter(obj2);
		ObjRender_SetPosition(obj2,GetScreenWidth/2,GetScreenHeight/2,0);
		ObjRender_SetBlendType(obj2,BLEND_SUBTRACT);
		ObjRender_SetColor(obj2, 255, 128, 128);
		ObjRender_SetScaleXYZ(obj2, 1.5);
		
		let objAnkhs = [];
		ascent(i in 0..2)
		{
			let obj3 = ObjPrim_Create(OBJ_SPRITE_2D); 
			Obj_SetRenderPriorityI(obj3, BASE_RENDERI + 3); 
			ObjPrim_SetTexture(obj3, IMG_STAGE_01A_SPELL_02); 
			ObjSprite2D_SetSourceRect(obj3, 0, 0,512, 1024);
			ObjSprite2D_SetDestRect(obj3, 0, 0, 512, 1024);
			ObjSprite2D_SetDestCenter(obj3);
			ObjRender_SetPosition(obj3,[0,GetScreenWidth][i],GetScreenHeight/2,0);
			ObjRender_SetScaleXYZ(obj3, 0.6);
			ObjRender_SetColor(obj3, 128,32,0);
			objAnkhs ~= [obj3];
		}
		
		let obj4 = ObjPrim_Create(OBJ_SPRITE_2D); 
		Obj_SetRenderPriorityI(obj4, BASE_RENDERI + 4); 
		ObjPrim_SetTexture(obj4, IMG_STAGE_04C_SPELL_00); 
		ObjSprite2D_SetSourceRect(obj4, 0, 0,1024, 1024);
		ObjSprite2D_SetDestRect(obj4, 0, 0, 1024, 1024);
		ObjSprite2D_SetDestCenter(obj4);
		ObjRender_SetPosition(obj4,GetScreenWidth/2,GetScreenHeight/2,0);
		ObjRender_SetBlendType(obj4,BLEND_ADD_ARGB);
		ObjRender_SetScaleXYZ(obj4, 1 * 1.5);
		//ObjRender_SetColor(obj4, 255, 128, 128);
		//ObjRender_SetAngleZ(obj,-90);
		//ObjRender_SetBlendType(obj,BLEND_ADD_ARGB);

		let alpha1 = 0;
		let c = 0;
		let scrollSpd_bg01 = 0.25 * 1.5;
		while(menuState==MENUSTATE_CHARACTER_SELECT)
		{
			if(selectedTeam == PLAYERTEAM_A)
			{
				if(alpha1 < 1)
				{ 
					alpha1 += 1/10;
				}
			} 
			else
			{
				if(alpha1>0)
				{
					alpha1 -= 1/10;
				}
			}
			
			let combinedAlpha = alpha1 * characterSelect_AlphaScl * alphaModifier;
			
			ObjRender_SetPosition(obj,GetScreenWidth/2,GetScreenHeight/2,0);
			ObjRender_SetPosition(obj2,GetScreenWidth/2,GetScreenHeight/2,0);
			ObjRender_SetPosition(obj4,GetScreenWidth/2,GetScreenHeight/2,0);
			
			ObjRender_SetAlpha(obj, 255*combinedAlpha);
			ObjRender_SetAlpha(obj2, 64*combinedAlpha);
			ascent(i in 0..2)
			{
				ObjRender_SetPosition(objAnkhs[i],[0,GetScreenWidth][i],GetScreenHeight/2,0);
				ObjRender_SetAlpha(objAnkhs[i], 128*combinedAlpha);
			}
			
			ObjRender_SetAlpha(obj4, 64*combinedAlpha);
			ObjRender_SetAngleZ(obj4, -0.05*c);
			
			ObjSprite2D_SetSourceRect(obj2, 0, c*scrollSpd_bg01,1024, 1024+c*scrollSpd_bg01);
			c++;
			yield;
		}
		Obj_Delete(obj);
		Obj_Delete(obj2);
		Obj_Delete(obj4);
		ascent(i in 0..2)
		{
			Obj_Delete(objAnkhs[i]);
		}
		
	}

	task DuoBG_B()
	{
		let obj = ObjPrim_Create(OBJ_SPRITE_2D); 
		Obj_SetRenderPriorityI(obj, BASE_RENDERI + 3); 
		ObjPrim_SetTexture(obj, IMG_STAGE_01B_SPELL_00); 
		ObjSprite2D_SetSourceRect(obj, 0, 0,1024, 512);
		ObjSprite2D_SetDestRect(obj, 0, 0, 1024, 512);
		ObjSprite2D_SetDestCenter(obj);
		ObjRender_SetPosition(obj,GetScreenWidth/2,GetScreenHeight/2,0);
		ObjRender_SetScaleXYZ(obj, 1*1.5);
		
		let obj2 = ObjPrim_Create(OBJ_SPRITE_2D); 
		Obj_SetRenderPriorityI(obj2, BASE_RENDERI + 4); 
		ObjPrim_SetTexture(obj2, IMG_STAGE_04A_SPELL_01); 
		ObjSprite2D_SetSourceRect(obj2, 0, 0,512, 512);
		ObjSprite2D_SetDestRect(obj2, 0, 0, 512, 512);
		ObjSprite2D_SetDestCenter(obj2);
		ObjRender_SetPosition(obj2,GetScreenWidth/2,GetScreenHeight/2,0);
		ObjRender_SetBlendType(obj2, BLEND_SHADOW );
		ObjRender_SetScaleXYZ(obj2, 1.6*1.5);
		
		let obj3 = ObjPrim_Create(OBJ_SPRITE_2D); 
		Obj_SetRenderPriorityI(obj3, BASE_RENDERI + 4); 
		ObjPrim_SetTexture(obj3, IMG_STAGE_01B_SPELL_02); 
		ObjSprite2D_SetSourceRect(obj3, 0, 0,1024, 1024);
		ObjSprite2D_SetDestRect(obj3, 0, 0, 1024, 1024);
		ObjSprite2D_SetDestCenter(obj3);
		ObjRender_SetPosition(obj3,GetScreenWidth/2,GetScreenHeight/2,0);
		ObjRender_SetScaleXYZ(obj3, 1*1.5);
		ObjRender_SetBlendType(obj3, BLEND_SUBTRACT);
		
		let scrlSpd2 = -0.5;
		let alpha1 = 0;
		let c = 0;
		while(menuState==MENUSTATE_CHARACTER_SELECT)
		{
			if(selectedTeam == PLAYERTEAM_B)
			{
				if(alpha1 < 1)
				{ 
					alpha1 += 1/10;
				}
			} 
			else
			{
				if(alpha1>0)
				{
					alpha1 -= 1/10;
				}
			}
			
			ObjRender_SetPosition(obj,GetScreenWidth/2,GetScreenHeight/2,0);
			ObjRender_SetPosition(obj2,GetScreenWidth/2,GetScreenHeight/2,0);
			ObjRender_SetPosition(obj3,GetScreenWidth/2,GetScreenHeight/2,0);
				
			let combinedAlpha = alpha1 * characterSelect_AlphaScl * alphaModifier;
			ObjRender_SetAlpha(obj, 255*combinedAlpha);
			ObjRender_SetColor(obj2, 255*combinedAlpha,255*combinedAlpha,255*combinedAlpha);
			ObjRender_SetAlpha(obj3, 32*combinedAlpha);
			
			ObjRender_SetAngleZ(obj2, c*0.1);
			ObjSprite2D_SetSourceRect(obj3, 0, c*scrlSpd2,1024, 1024+c*scrlSpd2);
			c++;
			yield;
		}
		Obj_Delete(obj);
		Obj_Delete(obj2);
		Obj_Delete(obj3);
	}
	
	task DuoBG_C()
	{
		let obj = ObjPrim_Create(OBJ_SPRITE_2D);
		Obj_SetRenderPriorityI(obj, BASE_RENDERI+3);
		ObjPrim_SetTexture(obj, IMG_STAGE_01C_SPELL_00);
		ObjSprite2D_SetSourceRect(obj, 0, 0, 1024, 1024);
		ObjSprite2D_SetDestCenter(obj);
		ObjRender_SetPosition(obj, GetScreenWidth/2, GetScreenHeight/2, 0);
		
		let obj2 = ObjPrim_Create(OBJ_SPRITE_2D);
		Obj_SetRenderPriorityI(obj2, BASE_RENDERI+3);
		ObjPrim_SetTexture(obj2, IMG_STAGE_01C_SPELL_01);
		ObjSprite2D_SetSourceRect(obj2, 0, 0, 1024, 1024);
		ObjSprite2D_SetDestCenter(obj2);
		ObjRender_SetPosition(obj2, GetScreenWidth/2, GetScreenHeight/2, 0);
		ObjRender_SetBlendType(obj2, BLEND_ADD_ARGB);
		
		let obj3 = ObjPrim_Create(OBJ_SPRITE_2D); 
		Obj_SetRenderPriorityI(obj3, BASE_RENDERI+3); 
		ObjPrim_SetTexture(obj3, IMG_STAGE_04B_SPELL_02); 
		ObjSprite2D_SetSourceRect(obj3, 0, 0,1024, 1024);
		ObjSprite2D_SetDestRect(obj3, 0, 0, 1024, 1024);
		ObjSprite2D_SetDestCenter(obj3);
		ObjRender_SetPosition(obj3,GetScreenWidth/2,GetScreenHeight/2,0);
		ObjRender_SetAngleZ(obj3,30);
		
		let obj4 = ObjPrim_Create(OBJ_SPRITE_2D); 
		Obj_SetRenderPriorityI(obj4, BASE_RENDERI+3); 
		ObjPrim_SetTexture(obj4, IMG_STAGE_04B_SPELL_02); 
		ObjSprite2D_SetSourceRect(obj4, 0, 0,1024, 1024);
		ObjSprite2D_SetDestRect(obj4, 0, 0, 1024, 1024);
		ObjSprite2D_SetDestCenter(obj4);
		ObjRender_SetPosition(obj4,GetScreenWidth/2,GetScreenHeight/2,0);
		ObjRender_SetAngleZ(obj4,-30);
		
		ObjRender_SetColor(obj3, 64,64,64);
		ObjRender_SetColor(obj4, 64,64,64);
		
		let alpha1 = 0;
		let pos = 0;
		let zangle = 0;
		while(menuState==MENUSTATE_CHARACTER_SELECT)
		{
			if(selectedTeam == PLAYERTEAM_C)
			{
				if(alpha1 < 1)
				{ 
					alpha1 += 1/10;
				}
			} 
			else
			{
				if(alpha1>0)
				{
					alpha1 -= 1/10;
				}
			}
			
			ObjRender_SetPosition(obj,GetScreenWidth/2,GetScreenHeight/2,0);
			ObjRender_SetPosition(obj2,GetScreenWidth/2,GetScreenHeight/2,0);
			ObjRender_SetPosition(obj3,GetScreenWidth/2,GetScreenHeight/2,0);
			ObjRender_SetPosition(obj4,GetScreenWidth/2,GetScreenHeight/2,0);
			
			let combinedAlpha = alpha1 * characterSelect_AlphaScl * alphaModifier;
			
			ObjSprite2D_SetSourceRect(obj, 0, -pos, 1024, 1024 - pos);
			ObjRender_SetAlpha(obj, 255*combinedAlpha);
			
			ObjRender_SetAngleZ(obj2, zangle);
			ObjRender_SetAlpha(obj2, 255*combinedAlpha*0.35);
			
			ObjRender_SetAlpha(obj3, 255*combinedAlpha);
			ObjRender_SetAlpha(obj4, 255*combinedAlpha);
			
			ObjSprite2D_SetSourceRect(obj3, 0, pos,1024, 1024+pos);
			ObjSprite2D_SetSourceRect(obj4, 0, pos,1024, 1024+pos);

			zangle += 0.075;
			pos += 1;
			yield;
		}
		Obj_Delete(obj);
		Obj_Delete(obj2);
		Obj_Delete(obj3);
		Obj_Delete(obj4);
	}




}















