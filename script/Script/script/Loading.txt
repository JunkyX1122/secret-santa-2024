let mainLoadBool = false;
let hasEverythingLoaded = false;
let LoadingBool = false;


let totalThingsToLoad = 0;
let thingsLoaded = 0;
task LoadTally
{
	totalThingsToLoad = 0;
	thingsLoaded = 0;
	totalThingsToLoad+=length(StageSystem_ImgArray);
	totalThingsToLoad+=length(StageSystem_ImgArray);
	totalThingsToLoad+=length(Enemy_ImgArray);
	totalThingsToLoad+=length(Effects_ImgArray);
	totalThingsToLoad+=length(Card_ImgArray);
	totalThingsToLoad+=length(BossSprite_ImgArray);
	totalThingsToLoad+=length(TalkImg_ImgArray);
	totalThingsToLoad+=length(System_ImgArray);

	ascent(i in 0..length(AllStageBackground_ImgArray)) {
		ascent(o in 0..length(AllStageBackground_ImgArray[i])){ totalThingsToLoad+=1; }
	}
	
	totalThingsToLoad+=length(TitleScreen_ImgArray);
	totalThingsToLoad+=length(System_ImgArray);
	totalThingsToLoad+=length(Icon_ImgArray);
	totalThingsToLoad+=length(CharCutin_ImgArray);


	ascent(i in 0..length(Team1PortraitImg_ImgArray)) {
		ascent(o in 0..length(Team1PortraitImg_ImgArray[i])) { totalThingsToLoad+=1; }	
	}
	
	ascent(i in 0..length(Team2PortraitImg_ImgArray)) {
		ascent(o in 0..length(Team2PortraitImg_ImgArray[i])) { totalThingsToLoad+=1; }
	}
	
	ascent(i in 0..length(Team3PortraitImg_ImgArray)) {
		ascent(o in 0..length(Team3PortraitImg_ImgArray[i])) { totalThingsToLoad+=1; }
	}
	
	ascent(i in 0..length(BossPortraitImg_ImgArray)) {
		ascent(o in 0..length(BossPortraitImg_ImgArray[i])) { totalThingsToLoad+=1; }	
	}
	
	//-----------------Load Sound-----------------
	totalThingsToLoad+=length(LoadAllSoundsArray);
	totalThingsToLoad+=length(LoadAllMusicArray);
	WriteLog(totalThingsToLoad);
}

task LoadTexturePlus(id)
{
	LoadTexture(id);
	thingsLoaded++;
}

task LoadThings
{
	
	SE_PlayLen(title_cursor, 40);
	PostLoadingText("Remember to turn down your volume~", 20);
	wait(180);
	
	Loading;
	LoadTally;
	
	//-----------------Load Images-----------------
	ascent(i in 0..length(StageSystem_ImgArray))
	{
		LoadTexturePlus(StageSystem_ImgArray[i]);
		yield;
	}
	ascent(i in 0..length(StageSystem_ImgArray))
	{
		LoadTexturePlus(StageSystem_ImgArray[i]);
		yield;
	}
	ascent(i in 0..length(Enemy_ImgArray))
	{
		LoadTexturePlus(Enemy_ImgArray[i]);
		yield;
	}
	ascent(i in 0..length(Effects_ImgArray))
	{
		LoadTexturePlus(Effects_ImgArray[i]);
		yield;
	}
	ascent(i in 0..length(Card_ImgArray))
	{
		LoadTexturePlus(Card_ImgArray[i]);
		yield;
	}

	ascent(i in 0..length(BossSprite_ImgArray))
	{
		LoadTexturePlus(BossSprite_ImgArray[i]);
		yield;
	}
	ascent(i in 0..length(TalkImg_ImgArray))
	{
		LoadTexturePlus(TalkImg_ImgArray[i]);
		yield;
	}
	ascent(i in 0..length(System_ImgArray))
	{
		LoadTexturePlus(System_ImgArray[i]);
		yield;
	}
	ascent(i in 0..length(AllStageBackground_ImgArray))
	{
		ascent(o in 0..length(AllStageBackground_ImgArray[i]))
		{
			LoadTexturePlus(AllStageBackground_ImgArray[i][o]);
			yield;
		}
	}
	ascent(i in 0..length(TitleScreen_ImgArray))
	{
		LoadTexturePlus(TitleScreen_ImgArray[i]);
		yield;
	}
	ascent(i in 0..length(System_ImgArray))
	{
		LoadTexturePlus(System_ImgArray[i]);
		yield;
	}
	ascent(i in 0..length(Icon_ImgArray))
	{
		LoadTexturePlus(Icon_ImgArray[i]);
		yield;
	}
	ascent(i in 0..length(CharCutin_ImgArray))
	{
		LoadTexturePlus(CharCutin_ImgArray[i]);
		yield;
	}
	
	ascent(i in 0..length(Team1PortraitImg_ImgArray))
	{
		ascent(o in 0..length(Team1PortraitImg_ImgArray[i]))
		{
			LoadTexturePlus(Team1PortraitImg_ImgArray[i][o]);
		}
		yield;
	}
	
	ascent(i in 0..length(Team2PortraitImg_ImgArray))
	{
		ascent(o in 0..length(Team2PortraitImg_ImgArray[i]))
		{
			LoadTexturePlus(Team2PortraitImg_ImgArray[i][o]);
		}
		yield;
	}
	
	ascent(i in 0..length(Team3PortraitImg_ImgArray))
	{
		ascent(o in 0..length(Team3PortraitImg_ImgArray[i]))
		{
			LoadTexturePlus(Team3PortraitImg_ImgArray[i][o]);
		}
		yield;
	}
	
	ascent(i in 0..length(BossPortraitImg_ImgArray))
	{
		ascent(o in 0..length(BossPortraitImg_ImgArray[i]))
		{
			LoadTexturePlus(BossPortraitImg_ImgArray[i][o]);
		}
		yield;
	}
	
	//-----------------Load Sound-----------------
	ascent(i in 0..length(LoadAllSoundsArray))
	{
		LoadSound(LoadAllSoundsArray[i]);
		thingsLoaded++;
		yield;
	}
	ascent(i in 0..length(LoadAllMusicArray))
	{
		LoadSound(LoadAllMusicArray[i]);
		thingsLoaded++;
		yield;
	}
	hasEverythingLoaded = true;
	while(!LoadingBool){yield;}
	
	mainLoadBool = true;
	WriteLog(totalThingsToLoad);
}

task PostLoadingText(texx, s)
{
	let obj = ObjText_Create;
	ObjText_SetText(obj, texx );
	ObjText_SetFontType(obj, "Lucida Fax");
	ObjText_SetFontBold(obj, true);
	ObjText_SetHorizontalAlignment(obj, ALIGNMENT_CENTER);
	ObjText_SetMaxWidth(obj, GetScreenWidth-24);
	Obj_SetRenderPriorityI(obj,BASE_RENDERI+11);
	
	ObjText_SetFontSize(obj,s);
	ObjText_SetFontColorTop(obj,255,255,255);
	ObjText_SetFontColorBottom(obj, 255, 255, 255);
	
	ObjRender_SetPosition(obj, round(GetScreenWidth/2-(GetScreenWidth-24)/2), GetScreenHeight/2 - ObjText_GetTotalHeight(obj)/2, 0);
	let ALF = 255;
	let t = 30;
	ascent(i in 0..t)
	{
		ALF = 255/(t-1)*i;
		ObjRender_SetAlpha(obj,ALF);
		SkippableWait(1);
	}
	SkippableWait(120);
	ascent(i in 0..t)
	{
		ObjRender_SetAlpha(obj, ALF-ALF/(t-1)*i);
		SkippableWait(1);	
	}
	Obj_Delete(obj);
}

let WIND_VOLUME = 50;
task Loading
{
	MusicChange(BGM_WIND, 80, -1, -1);
	MusicVolumeChange(0, WIND_VOLUME, 180);
	menuState = MENUSTATE_MAIN;
	CloudRendering(false);
	SnowProgram(false);
	Black();
	TitleScreenText();
	LoadingPercent();
	while(!hasEverythingLoaded){ yield; }
	
	wait(60);
	PostLoadingText("Presented by Joonkeh", 40);
	SkippableWait(180);
	PostLoadingText("A gift for Redrin", 40);
	SkippableWait(180);
	
	ascent(i in 0..200)
	{
		SetBGMVolume(WIND_VOLUME-WIND_VOLUME/199*i);
		SkippableWait(1);
	}

	yield;
	LoadingBool = true;
	
	//Logo();
	//LoadIcon;
	//Orb;
	
	task TitleScreenText()
	{
		let obj = ObjText_Create;
		ObjText_SetText(obj,
			"This game is part of the annual Shrines and Youkai Secret Santa.[r]" ~
			"This is a derivative work of fiction.[r]"~
			"All characters that appear in this work are a part of the S&Y universe."
			);
		ObjText_SetFontType(obj, "Lucida Fax");
		ObjText_SetFontBold(obj, true);
		ObjText_SetHorizontalAlignment(obj, ALIGNMENT_CENTER);
		ObjText_SetMaxWidth(obj, GetScreenWidth-24);
		Obj_SetRenderPriorityI(obj,BASE_RENDERI+11);
		
		ObjText_SetFontSize(obj,20);
		ObjText_SetFontColorTop(obj,255,255,255);
		ObjText_SetFontColorBottom(obj, 255, 255, 255);
		
		ObjRender_SetPosition(obj, round(GetScreenWidth/2-(GetScreenWidth-24)/2), GetScreenHeight/2 - ObjText_GetTotalHeight(obj)/2, 0);
		let ALF = 0;
		let t = 60;
		ascent(i in 0..t)
		{
			ALF = 255/(t-1)*i;
			ObjRender_SetAlpha(obj,ALF);
			yield;
		}
		while(hasEverythingLoaded==false){yield;}
		ascent(i in 0..t)
		{
			ObjRender_SetAlpha(obj, ALF-ALF/(t-1)*i);
			SkippableWait(1);	
		}
		Obj_Delete(obj);
	}
	task LoadingPercent()
	{
		let obj = ObjText_Create;
		ObjText_SetText(obj, "0%");
		ObjText_SetFontType(obj, "Lucida Fax");
		ObjText_SetFontBold(obj, true);
		ObjText_SetHorizontalAlignment(obj, ALIGNMENT_CENTER);
		ObjText_SetMaxWidth(obj, GetScreenWidth);
		Obj_SetRenderPriorityI(obj,BASE_RENDERI+11);
		
		ObjText_SetFontSize(obj,30);
		ObjText_SetFontColorTop(obj,255,255,255);
		ObjText_SetFontColorBottom(obj, 255, 255, 255);
		
		ObjRender_SetPosition(obj, round(GetScreenWidth-75-(GetScreenWidth)/2), GetScreenHeight - 50 - ObjText_GetTotalHeight(obj)/2, 0);
		let ALF = 0;
		ascent(i in 0..60)
		{
			let loadPercent = floor(100 * thingsLoaded / totalThingsToLoad);
			ObjText_SetText(obj, IntToString(loadPercent) ~ "%");
			ALF = 255/59*i;
			ObjRender_SetAlpha(obj,ALF);
			yield;
		}
		while(hasEverythingLoaded==false)
		{
			let loadPercent = floor(100 * thingsLoaded / totalThingsToLoad);
			ObjText_SetText(obj, IntToString(loadPercent) ~ "%");
			yield;
		}
		let t = 140;
		ascent(i in 0..t)
		{
			ObjRender_SetAlpha(obj, ALF-ALF/(t-1)*i);
			SkippableWait(1);		
		}
		Obj_Delete(obj);
	}
	task Black()
	{
		let obj = ObjPrim_Create(OBJ_SPRITE_2D);
		ObjPrim_SetTexture(obj,IMG_PIXEL);
		Obj_SetRenderPriorityI(obj,BASE_RENDERI+11);
		ObjRender_SetAngleZ(obj,0);		
		let ALF=255;
		ObjRender_SetAlpha(obj,ALF);
		let scale =1;
		ObjRender_SetScaleXYZ(obj,scale,scale,scale);
		ObjSprite2D_SetSourceRect(obj,0,0,GetScreenWidth,GetScreenHeight);
		ObjSprite2D_SetDestRect(obj,0,0,GetScreenWidth,GetScreenHeight);
		ObjSprite2D_SetDestCenter(obj);
		ObjRender_SetColor(obj, 0,0,0);
		ObjRender_SetPosition(obj,GetScreenWidth/2,GetScreenHeight/2,0);
		ascent(i in 0..60)
		{
			ALF=255 - 50/59*i;
			ObjRender_SetAlpha(obj,ALF);
			yield;
		}
		while(hasEverythingLoaded==false)
		{
			yield;
		}
		
		while(!LoadingBool){yield;}
		let t = 140;
		ascent(i in 0..t)
		{
			ObjRender_SetAlpha(obj, ALF-ALF/(t-1)*i);
			SkippableWait(1);	
		}
		Obj_Delete(obj);
	}
}