#TouhouDanmakufu[Package]
#Title["Package"]
#Text[""]
#Player["./../../player/Gato/Player_Gato.txt", "./../../player/Sullen/Player_Sullen.txt", "./../../player/Viivi/Player_Viivi.txt"]
#include "./lib/lib_img.txt"
#include "./lib/lib_sound.txt"
#include "./lib/lib_event.txt"
#include "./lib/lib_data.txt"
#include "./lib/dialog_func.txt"
#include "./Loading.txt"
#include "./Package_Functions.txt"
#include "./Package_MainMenu.txt"
#include "./Package_CharacterSelect.txt"
#include "./Package_Practice.txt"
#include "./Package_Options.txt"
#include "./Package_Ending.txt"
#include "./Package_Difficulty.txt"
#include "./Package_Gallery.txt"
let skipIntro = false;
const BMG_TITLE_VOLUME = 75;
@Initialize
{
	//SetSkipModeKey(KEY_INVALID);
	//InstallFont(GetCurrentScriptDirectory~"COLUMBUS.ttf");
	InstallFont(GetCurrentScriptDirectory~"lucon.ttf");
	InstallFont(GetCurrentScriptDirectory~"reve.ttf");	
	InstallFont(GetCurrentScriptDirectory~"ITCBLKAD.ttf");	
	InstallFont(GetCurrentScriptDirectory~"mustica-pro.otf");	
	InstallFont(GetCurrentScriptDirectory~"LFAXD.ttf");
	Loader();
}
@MainLoop
{
	HandleMusicVolume();
	if(GetKeyState(KEY_0)==KEY_PUSH)
	{
		ClosePackage();
	}
	yield;
}

@Event
{
	alternative(GetEventType())
	case(EV_USER_PLAYER_DEATH)
	{	
		WriteLog("PLAYERDEAD");
		if(!GetCommonData("isPracticing", false))
		{
			TEndScene();
		}
		else
		{
			//TEndPracticeScene(currentPracticePath);
		}
	}
}

@Finalize
{
}
//----------------------------------------------------
task Loader
{
	LoadThings;
	while(mainLoadBool==false){yield;}
	InitialisePracticeAttackPaths();
	LoadingBool = true;
	skipIntro = false;
	
	LoadSaveDataStuff();
	wait(10);
	TIntro;
	TTitleScene;
}
let carryOn = true;
let titleFocusX = 0;
let titleFocusY = 0;
let BASE_RENDER = 0.81;
let BASE_RENDERI = BASE_RENDER*100;

const MENUSTATE_UNACTIVE 				= 0;
const MENUSTATE_MAIN 					= 1;
const MENUSTATE_CHARACTER_SELECT 		= 2;
const MENUSTATE_PRACTICE				= 3;
const MENUSTATE_OPTIONS					= 4;
const MENUSTATE_CREDITS					= 5;
const MENUSTATE_DIFFICULTY				= 6;
const MENUSTATE_GALLERY					= 7;


let menuState = MENUSTATE_UNACTIVE;

function TIntro()
{
	
}

task TTitleScene
{
	if(menuState==MENUSTATE_UNACTIVE)
	{
		menuState = MENUSTATE_MAIN;
		TDarkManager();
		Title_Display();
	}
}



task LoadSaveDataStuff()
{
	if(!LoadCommonDataAreaA2("Setting", DATA_SETTINGS_PATH)){
		CreateCommonDataArea("Setting");
		SaveCommonDataAreaA2("Setting", DATA_SETTINGS_PATH);
	}
	if(!LoadCommonDataAreaA2("History", DATA_HISTORY_PATH)){
		CreateCommonDataArea("History");
		SaveCommonDataAreaA2("History", DATA_HISTORY_PATH);
	}
	
	LoadCommonDataAreaA2("Setting", DATA_SETTINGS_PATH);
	LoadCommonDataAreaA2("History", DATA_HISTORY_PATH);
	option_SFXVolume = GetAreaCommonData("Setting", "SFXVolume", 1);
	option_MusicVolume = GetAreaCommonData("Setting", "MusicVolume", 1);
	startingLives = GetAreaCommonData("Setting", "StartingLives", 2);
	option_TalkSound = GetAreaCommonData("Setting", "TalkSound", 0);
	isCreditsAvailable = GetAreaCommonData("History", "CreditsAvailable", false);
	
	TeamA_StandardClear = GetAreaCommonData("History", GetClearString(PLAYERTEAM_A, 0), false);
	TeamA_OriginalClear = GetAreaCommonData("History", GetClearString(PLAYERTEAM_A, 1), false);
	TeamB_StandardClear = GetAreaCommonData("History", GetClearString(PLAYERTEAM_B, 0), false);
	TeamB_OriginalClear = GetAreaCommonData("History", GetClearString(PLAYERTEAM_B, 1), false);
	TeamC_StandardClear = GetAreaCommonData("History", GetClearString(PLAYERTEAM_C, 0), false);
	TeamC_OriginalClear = GetAreaCommonData("History", GetClearString(PLAYERTEAM_C, 1), false);
	
	SetCommonData("SFXVolume", option_SFXVolume);
	SetCommonData("MusicVolume", option_MusicVolume);
	SetCommonData("TalkSound", option_TalkSound);
	SetCommonData("isPracticing", false);
}

let totalDarkness = 0;
let hasIntiatedTDark = false;
task TDarkManager()
{
	if(hasIntiatedTDark) return;
	hasIntiatedTDark = true;
	let obj = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(obj, IMG_PIXEL);
	ObjSprite2D_SetSourceRect(obj, 0, 0, 1024, 418);
	ObjSprite2D_SetDestRect(obj, 0, 0, 1024, 418);
	ObjSprite2D_SetDestCenter(obj);
	ObjRender_SetScaleY(obj, 1.9);
	ObjRender_SetPosition(obj, GetScreenWidth/2, GetScreenHeight/2, 0);
	Obj_SetRenderPriorityI(obj, 100);
	ObjRender_SetColor(obj, 0, 0, 0);
	while(true)
	{
		ObjRender_SetAlpha(obj, 255*totalDarkness);
		yield;
	}
	Obj_Delete(obj);
}

task TDarkTransition(d1,d2, t)
{
	ascent(i in 0..t)
	{
		totalDarkness = Interpolate_Linear(d1, d2, 1/(t-1)*i);
		yield;
	}
}
task TFlash(t)
{
	let obj = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(obj, IMG_PIXEL);
	ObjSprite2D_SetSourceRect(obj, 0, 0, 1024, 418);
	ObjSprite2D_SetDestRect(obj, 0, 0, 1024, 418);
	ObjSprite2D_SetDestCenter(obj);
	ObjRender_SetScaleY(obj, 1.9);
	ObjRender_SetPosition(obj, GetScreenWidth/2, GetScreenHeight/2, 0);
	Obj_SetRenderPriorityI(obj, 100);
	ObjRender_SetBlendType(obj, BLEND_ADD_ARGB);
	ascent(i in 0..t)
	{
		ObjRender_SetAlpha(obj, 64-64/t*i);
		yield;
	}
	Obj_Delete(obj);
}